#include <TinyGPS++.h>
#include <SoftwareSerial.h>

char rate_10_msg[14] = {0xB5,0x62,0x06,0x08,0x06,0x00,0x64,0x00,0x01,0x00,0x01,0x00,0x7A,0x12};
char rate_5_msg[14] = {0xB5,0x62,0x06,0x08,0x06,0x00,0xC8,0x00,0x01,0x00,0x01,0x00,0xDE,0x6A};

//baudrate = 115200
char baudrate_115200[37] = {0xb5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x08, 0x00, 0x00, 0x00, 
0xc2, 0x01, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x96, 0xb5, 0x62, 0x06, 0x00, 0x01, 0x00, 0x01, 0x08, 0x22};

//disable GSV
char disable_GSV[16] = {0xB5 ,0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x39}; 

//disable GSA
char disable_GSA[16] = {0xB5 ,0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x32};

//disable GLL
char disable_GLL[16] = {0xB5 ,0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x2B};

//disable RMC
char disable_RMC[16] = {0xB5 ,0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x40};

// The serial connection to the GPS module
// How to connect GPS
// VCC - 5V , GND - GND , RX - pin 3 , TX - pin 4

unsigned long StartTime = millis();
TinyGPSPlus gps;
static const int RXPin = 4, TXPin = 3;
static const uint32_t GPSBaud = 9600;
SoftwareSerial ss(RXPin, TXPin);

void set_gps_baudrate(long baudrate){
ss.print("$PUBX,41,1,0007,0003," + String(baudrate) + ",0\n\r");


}
void setup(){
  Serial.begin(115200);
  Serial.println("I have begun");
  ss.begin(9600);
  delay(200);
  set_gps_baudrate(19200);
  delay(100);
  ss.end();
  delay(100);
  ss.begin(19200);
  ss.write(disable_GSV, 16);
  delay(10);
  ss.write(disable_GSA, 16);
  delay(10);
  ss.write(disable_GLL, 16);
  delay(10);
  ss.write(disable_RMC, 16);
  ss.write(rate_5_msg, 14);
  }

void loop(){
  // This sketch displays information every time a new sentence is correctly encoded.
  while (ss.available() > 0){
    gps.encode(ss.read());
    if (gps.location.isUpdated()){
      // Latitude in degrees (double)
      Serial.print(gps.location.lat(), 6);      
      Serial.print(" ");
      // Longitude in degrees (double)
      Serial.print(gps.location.lng(), 6); 
      Serial.print(" ");
      // Time
      unsigned long CurrentTime = millis();
      unsigned long ElapsedTime = CurrentTime - StartTime;
      Serial.println( ElapsedTime);
      // Height
      Serial.print("Altitude in meters = "); 
      Serial.println(gps.altitude.meters()); 
      // Degrees
      Serial.println(gps.course.deg()); 
      }
  }
